name: "Frogbot Security Scan"

on:
  pull_request_target: 
    types: [opened, synchronized] # Triggers scan-pr flow for every opened/updated pull request
  push: # Triggers scan-repo flow for every push to the specified branches
    branches:
      - Main
  workflow_dispatch: # The repository will be scanned on demand

permissions:
  pull-requests: write
  contents: write
  security-events: write
  # [Mandatory If using OIDC authentication protocol instead of JF_ACCESS_TOKEN]

jobs:
  frogbot-scan:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # The repository scanning will be triggered periodically on the following branches.
        branch: ["main"]
    steps:
      - uses: jfrog/frogbot@v2
        # [Mandatory if using OIDC authentication protocol instead of JF_ACCESS_TOKEN]
        # Insert to oidc-provider-name the 'Provider Name' defined in the OIDC integration configured in the JPD
        #with:
        #  oidc-provider-name: morielp
        env:
          JF_URL: ${{ secrets.RT_URL }}
          JF_ACCESS_TOKEN: ${{ secrets.RT_ACCESS_TOKEN }}
          JF_GIT_TOKEN: ${{ secrets.JF_GIT_TOKEN }}
          JF_GIT_BASE_BRANCH: ${{ matrix.branch }}    # For repository scan action
          JF_INCLUDE_ALL_VULNERABILITIES: "true"
          JF_FAIL: "false"
          #JF_WATCHES: "morielp-1"
          JFROG_CLI_LOG_LEVEL: DEBUG
          JF_REQUIREMENTS_FILE: ../../pypi/requirements.txt
         


          
