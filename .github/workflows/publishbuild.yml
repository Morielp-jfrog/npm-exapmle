name: "test-build"
on: 
  #push:
  #  branches:
  #    - main
  workflow_dispatch: # The repository will be scanned on demand


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        env:
          # JFrog platform url (for example: https://acme.jfrog.io)
          JF_URL: ${{ secrets.RT_URL }}

          # JFrog Platform access token
          JF_ACCESS_TOKEN: ${{ secrets.RT_ACCESS_TOKEN }}
         

          # Basic authentication credentials
          ## JF_USER: ${{ secrets.JF_USER }}
          ## JF_PASSWORD: ${{ secrets.JF_PASSWORD }}

      - name: Run JFrog CLI
        run: |
          # Ping the server
          jf rt ping
          # Collect environment variables for the build
          jf c add --url= ${{ secrets.RT_URL }}
          jf npm-config --repo-resolve=morielp-npm --repo-deploy=morielp-npm
          jf npm install
          jf rt bce 
          # Collect VCS details from git and add them to the build
          jf rt bag 
          jf audit --watches "all_cves"
          # Publish build info
          jf rt bp 
          jf bs 
          # jf xr cl /api/v1/violations -H 'Content-Type: application/json' -d '{ "filters": { "watch_name": "a1", "resources": { "builds": [ { "name": "test-build","number": "49"}]}},"pagination": {"order_by": "created","direction": "asc","limit": 100,"offset": 1}}'
          # jf xr cl /api/v1/violations -H 'Content-Type: application/json' -d '{ "filters": { "watch_name": "a1", "resources": { "builds": [ { "name": "test-build","number": "49"}]}},"pagination": {"order_by": "created","direction": "asc","limit": 100,"offset": 1}}'
          jf xr cl /api/v2/ci/build/test-build/53
          jf xr cl /api/v2/ci/build/test-build/49
